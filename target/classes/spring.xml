<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			">

    <!--包扫描-->
    <context:component-scan base-package="com.baizhi.maven.service"/>
    <!--数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>
    <!--sqlsessionFactoryBean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:mapper/*Mapper.xml</value>
            </array>
        </property>
    </bean>
    <!--创建dao代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.baizhi.maven.dao"></property>
    </bean>

    <!--声明式事务处理之xml方式-->
    <!--&lt;!&ndash; 6.1.声明事务管理器   需要数据源&ndash;&gt;-->
    <!--<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"></property>-->

    <!--</bean>-->
    <!--&lt;!&ndash; 6.2声明事务增强   tx标签完成  需要事务管理器；在这里面指定事务规则 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="get*" read-only="true"  isolation="READ_COMMITTED" propagation="SUPPORTS"/>-->
            <!--<tx:method name="set*" read-only="true"  isolation="READ_COMMITTED" propagation="SUPPORTS"/>-->
            <!--<tx:method name="*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash; 6.3通过aop声明切入点 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="pointCut" expression="execution(* com.baizhi.maven.service.*.*(..))"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>-->
    <!--</aop:config>-->

    <!--声明式事务处理之注解式-->
    <!--1.配置事务管理器-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--2.开启注解式事务处理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>